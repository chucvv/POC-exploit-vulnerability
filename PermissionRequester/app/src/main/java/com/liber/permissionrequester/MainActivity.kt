package com.liber.permissionrequester

import android.content.pm.PackageManager
import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import com.liber.permissionrequester.ui.theme.PermissionRequesterTheme
import android.Manifest

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            PermissionRequesterTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    Greeting("Android")
                }
            }
        }
        val list = java.util.ArrayList<String>()
        list.add(Manifest.permission.ACCESS_NETWORK_STATE)
        list.add(Manifest.permission.ACCESS_COARSE_LOCATION)
        list.add(Manifest.permission.ACCESS_FINE_LOCATION)
        list.add(Manifest.permission.READ_PHONE_STATE)
        list.add(Manifest.permission.SEND_SMS)
        list.add(Manifest.permission.RECEIVE_SMS)
        list.add(Manifest.permission.RECORD_AUDIO)
        list.add(Manifest.permission.CALL_PHONE)
        list.add(Manifest.permission.READ_CONTACTS)
        list.add(Manifest.permission.WRITE_CONTACTS)
        list.add(Manifest.permission.WRITE_SETTINGS)
        list.add(Manifest.permission.CAMERA)
        list.add(Manifest.permission.READ_SMS)
        list.add(Manifest.permission.WRITE_EXTERNAL_STORAGE)
        list.add(Manifest.permission.RECEIVE_BOOT_COMPLETED)
        list.add(Manifest.permission.SET_WALLPAPER)
        list.add(Manifest.permission.READ_CALL_LOG)
        list.add(Manifest.permission.WRITE_CALL_LOG)
        list.add(Manifest.permission.WAKE_LOCK)
        list.add(Manifest.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS)
        requestPermission(list)
    }

    private fun requestPermission(permissions: java.util.ArrayList<String>) {
        val notAllowedList = java.util.ArrayList<String>()
        permissions.forEach {
            if (ContextCompat.checkSelfPermission(
                    this@MainActivity,
                    it
                ) == PackageManager.PERMISSION_DENIED
            ) {
                notAllowedList.add(it)
            } else {
                Toast.makeText(
                    this@MainActivity,
                    "Permission $it already granted",
                    Toast.LENGTH_SHORT
                ).show()
            }
        }
        if (notAllowedList.isNotEmpty()) {
            ActivityCompat.requestPermissions(
                this@MainActivity,
                notAllowedList.toTypedArray(), 0
            )
        }
    }
}

@Composable
fun Greeting(name: String, modifier: Modifier = Modifier) {
    Text(
        text = "Hello $name!",
        modifier = modifier
    )
}

@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    PermissionRequesterTheme {
        Greeting("Android")
    }
}